% Laser Selection Script
% Choose which laser to create (LaserA or LaserB)

laserChoice = 'LaserB';  % Set 'LaserA' or 'LaserB' here to select laser type

% Dynamically create the laser object based on the laserChoice string
switch laserChoice
    case 'LaserA'
        laserObj = eval('LaserA');  % Dynamically create instance of LaserA
    case 'LaserB'
        laserObj = eval('LaserB');  % Dynamically create instance of LaserB
    otherwise
        error('Invalid laser choice. Please select either LaserA or LaserB.');
end

% Display Laser Details
laserObj.displayLaserDetails();

% Create a simple GUI with axis for visualization
figure;
ax = axes('Parent', gcf);
axis([0 20 0 20]);
hold on;

% Create a marker to represent laser position (just as a point for now)
laserMarker = plot(ax, 10, 10, 'ro', 'MarkerSize', 10, 'MarkerFaceColor', 'r');  % Position at (10, 10)

% Set the handles in the laser object
laserObj.setHandles(ax, laserMarker);

% Example of updating the laser marker position in the GUI
% (In real applications, this could be based on laser firing or moving)
laserObj.markerHandle.XData = 15;  % Move marker to (15, 10)
laserObj.markerHandle.YData = 15;  % Move marker to (15, 15)

% Display a message indicating the laser position has changed
disp('Laser position updated in GUI.');
